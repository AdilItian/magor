import React, { useState } from 'react'
import { HorizontalLayout, FlexWrap } from '../Components'
import './TranscriptCard.css'
import cx from '../Utils/cx'
import moment from 'moment'
import { useHistory } from 'react-router-dom'
import { deleteTranscriptById } from '../Studio/api'
import toast from 'react-hot-toast'

const TranscriptCard = ({ data }) => {
    const mediaType = 'transcriptCard'
    const history = useHistory()
    const [isDeleted, setIsDeleted] = useState(false)

    const handleEdit = () => {
        const { mediaId, _id: transcriptId } = data
        history.push(`/recording/${mediaId}/transcript/${transcriptId}`)
    }

    const handleDelete = async () => {
        try {
            const r = window.confirm('Are you sure you want to delete?')
            if (!r) {
                return false
            }
            const id = data._id
            toast
                .promise(
                    deleteTranscriptById(id),
                    {
                        loading: `Delete Transcript: ${id}`,
                        success: `Successfully deleted transcript: ${id}!`,
                        error: (err) => `Error: ${err}`,
                    },
                    {
                        success: {
                            icon: 'ðŸ—‘',
                        },
                    }
                )
                .then((result) => {
                    console.log(result)
                    setIsDeleted(true)
                })
        } catch (err) {
            console.error(err)
        }
    }

    if (isDeleted) {
        return null
    }

    return (
        <div className={cx('cardContainer', mediaType)}>
            <FlexWrap style={{ justifyContent: 'space-between' }}>
                <p>Transcript ID: {data._id}</p>
                <p>Created At: {moment(data.createdAt).fromNow()}</p>
                <p>Last Updated At: {moment(data.updatedAt).fromNow()}</p>
            </FlexWrap>
            <p>{data.isAutoGenerated ? 'Auto Generated' : 'Uploaded'}</p>
            <HorizontalLayout>
                <button
                    onClick={handleEdit}
                    className="btn btn-outline-success mr-2"
                >
                    Edit
                </button>
                {data.azureUploadStatus === 'pending' && (
                    <button className="btn btn-outline-warning mr-2">
                        Publish
                    </button>
                )}

                <button onClick={handleDelete} className="btn btn-danger">
                    Delete
                </button>
            </HorizontalLayout>
        </div>
    )
}

export default TranscriptCard
